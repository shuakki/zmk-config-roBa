#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp W         &kp E    &kp R      &kp T                                                                 &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D    &kp F      &kp G             &lt 6 CAPSLOCK      &kp UNDERSCORE                  &kp H          &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C    &kp V      &kp B             &kp SQT             &kp LEFT_PARENTHESIS            &kp N          &kp M  &kp COMMA  &kp DOT  &kp MINUS
&kp LEFT_CONTROL  &kp LEFT_ALT  &lt 3 Q  &lt 1 TAB  &lt 2 LANG_HANJA  &lt 5 SPACE         &mt RIGHT_CONTROL LANG_HANGEUL  &kp BACKSPACE                             &lt 5 ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW+alfa {
            bindings = <
&trans         &kp LA(LEFT_ARROW)  &kp UP_ARROW        &kp LA(RIGHT_ARROW)  &kp LC(TAB)                      &kp LA(P)         &kp HOME            &kp UP_ARROW      &kp END             &kp F5
&kp PG_UP      &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &kp F2       &trans      &trans  &kp LA(NUMBER_1)  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW     &kp ENTER
&kp PAGE_DOWN  &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)  &trans       &trans      &trans  &kp LG(V)         &kp LS(LEFT_ARROW)  &kp LS(UP_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)
&trans         &trans              &kp LG(DOWN_ARROW)  &trans               &trans       &trans      &trans  &kp DEL                                                                     &trans
            >;
        };

        NUM {
            bindings = <
&trans         &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                      &kp ASTERISK     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&kp SEMICOLON  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp DOUBLE_QUOTES      &trans      &trans  &kp EQUAL        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ENTER
&kp QUESTION   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp COLON              &trans      &trans  &kp SLASH        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS
&trans         &trans           &trans        &trans                &trans                 &trans      &trans  &kp KP_NUMBER_0                                                     &kp PERIOD
            >;
        };

        Left_hand_tool {
            bindings = <
&kp ESCAPE      &kp F7  &kp F8  &kp F9  &trans                         &trans  &trans  &trans  &trans  &trans
&kp DELETE      &kp F4  &kp F5  &kp F6  &kp ENTER  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp F1  &kp F2  &kp F3  &trans     &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans     &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        CtrlCommand+Scroll {
            bindings = <
&trans     &kp LC(W)  &kp LG(E)  &kp LC(N9)  &kp LC(T)                          &trans  &trans            &trans                &trans  &trans
&kp LC(A)  &kp LC(S)  &trans     &kp LC(F)   &kp LC(G)  &kp ENTER       &trans  &trans  &kp LG(V)         &kp LS(LG(S))         &trans  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)   &kp LC(B)  &kp DELETE      &trans  &trans  &kp LC(NUMBER_2)  &kp LC(LS(NUMBER_2))  &trans  &trans
&trans     &trans     &trans     &trans      &trans     &trans          &trans  &trans                                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
